@model Order
@{
    ViewData["Title"] = "Detail";
    int count = 0;
}

<div class="container" style="min-height:50vh">
    <h1>Detail:</h1>

    <div class="card" style="max-width: 100vw">
        <div class="card-body" style="max-width: 100vw">
            <p style="font-weight:bold">OrderId : @Model.Id</p>
            <p style="font-weight:bold">Member name : @Model.FullName</p>
            <p style="font-weight:bold">Email : @Model.Email</p>
            <p style="font-weight:bold">Phone : @Model.Phone</p>
            <p style="font-weight:bold">Country : @Model.Country</p>
            <p style="font-weight:bold">City : @Model.City</p>
            <p style="font-weight:bold">Address : @Model.Adress</p>
            <p style="font-weight:bold">Total Price : @Model.TotalPrice $</p>
            <p style="font-weight:bold">ZipCode : @Model.ZipCode</p>
            <p style="font-weight:bold">
                    Order Status:
                    <span style="font-size: 15px;padding: 9px 16px;" class="badge text-@(Model.OrderStatus == BookStore.Enums.OrderStatus.Pending ? "secondary"
: (Model.OrderStatus == BookStore.Enums.OrderStatus.Accepted ? "success"
: (Model.OrderStatus == BookStore.Enums.OrderStatus.Delivery ? "warning"
: (Model.OrderStatus == BookStore.Enums.OrderStatus.Completed ? "primary"
: "danger"))))">@Model.OrderStatus</span>
                </p>
            <p style="font-weight:bold">Note : @Model.Note</p>

        </div>
        <ul class="list-group list-group-flush">
            @foreach (var oi in Model.OrderItems)
            {
                count++;
                <li class="list-group-item">@count - @oi.BookName @oi.Count x @((oi.SalePrice * (1 - (oi.DiscountPrice / 100))).ToString("0.00"))</li>
            }
        </ul>
        
    </div>
</div>